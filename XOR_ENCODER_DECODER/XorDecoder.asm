; Author : Abhinav Thakur
; Email  : compilepeace@gmail.com
;
; Description : The code generates a shellcode with a decoder stub which will decode the XOR
;				encoded shellcode and then execute it. Here we use the JMP-CALL-POP instructions.
;				Fill in The size of encoded shellcode(in RCX, line 26) and the encoded Shellcode
;				(with comma separated values, line 35).
;				Here we are selecting '0xAA' as the decoder byte. Only shellcodes encoded with
;				'0xAA' as the encoder byte will be decoded and generated by this decoder.
;
; SHELLCODE LENGTH = 
;


global _start


section .text
_start

	jmp PushShellcodeAddress


DecoderStub:

	pop	rbx					; RBX now contains the address of the encoded shellcode
	
	; Get ready for a lOop to decode the shellcode
	xor rcx, rcx			
	add	rcx, 				; Length of encoded shellcode

decode:
	xor	byte [rbx], 0xAA	
	inc rbx
	loop decode


PushShellcodeAddress:

	call DecoderStub
	encoded:	db	
